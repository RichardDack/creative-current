/* src/styles/components/StickyNavigationBar.module.css */

/* Main sticky navigation bar - hidden on mobile, visible on desktop/tablet */
.stickyNavigationBar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  width: 100%;
  pointer-events: auto; /* Ensure it can be interacted with */
  
  /* Enhanced glass morphism effect with proper transparency */
  background: rgba(20, 33, 45, 0.4);
  backdrop-filter: blur(24px) saturate(180%);
  -webkit-backdrop-filter: blur(24px) saturate(180%);
  border-bottom: 1px solid rgba(49, 175, 180, 0.2);
  box-shadow: 
    0 8px 32px rgba(20, 33, 45, 0.15),
    0 1px 0 rgba(255, 255, 255, 0.08) inset,
    0 -1px 0 rgba(0, 0, 0, 0.15) inset;
  
  /* Smooth transitions with enhanced easing */
  transition: 
    backdrop-filter var(--duration-normal) var(--ease-out),
    background-color var(--duration-normal) var(--ease-out),
    border-color var(--duration-normal) var(--ease-out),
    box-shadow var(--duration-normal) var(--ease-out);
  
  /* Hidden on mobile by default */
  display: none;
}

/* Show on tablet and desktop */
@media (min-width: 768px) {
  .stickyNavigationBar {
    display: block;
  }
}

/* Navigation content container */
.navigationContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: var(--breakpoint-desktop);
  margin: 0 auto;
  padding: var(--space-md) var(--space-2xl);
  height: 60px; /* Fixed height for consistent layout */
  box-sizing: border-box;
}

/* Logo section */
.logoSection {
  display: flex;
  align-items: center;
  flex-shrink: 0;
}

.logoLink {
  display: flex;
  align-items: center;
  text-decoration: none;
  transition: transform var(--duration-fast) var(--ease-out);
  border-radius: var(--radius-sm);
  padding: var(--space-xs);
}

.logoLink:hover {
  transform: scale(1.05);
}

.logoLink:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.logo {
  transition: transform var(--duration-fast) var(--ease-out);
}

/* Main navigation section */
.mainNavigation {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-lg);
  flex: 1;
}

/* Sub-navigation section */
.subNavigation {
  display: flex;
  align-items: center;
  gap: var(--space-md);
  flex-shrink: 0;
}

.subNavigationDivider {
  width: 1px;
  height: 24px;
  background: rgba(255, 255, 255, 0.2);
  margin: 0 var(--space-sm);
}

/* Navigation items with enhanced visual feedback */
.navigationItem {
  font-family: var(--font-ui);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: rgba(255, 255, 255, 0.9);
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--radius-md);
  transition: 
    all var(--duration-fast) var(--ease-out),
    transform var(--duration-fast) cubic-bezier(0.34, 1.56, 0.64, 1),
    box-shadow var(--duration-fast) var(--ease-out);
  position: relative;
  display: flex;
  align-items: center;
  min-height: 36px;
  white-space: nowrap;
  overflow: hidden;
}

/* Enhanced hover state with glass morphism and smooth animations */
.navigationItem:hover {
  background: rgba(49, 175, 180, 0.15);
  color: var(--color-primary);
  transform: translateY(-2px) scale(1.02);
  box-shadow: 
    0 4px 20px rgba(49, 175, 180, 0.2),
    0 1px 0 rgba(255, 255, 255, 0.1) inset;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* Subtle glow effect on hover */
.navigationItem:hover::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, 
    rgba(49, 175, 180, 0.1) 0%, 
    rgba(49, 175, 180, 0.05) 50%, 
    rgba(49, 175, 180, 0.1) 100%);
  border-radius: inherit;
  opacity: 0;
  animation: shimmer 2s ease-in-out infinite;
}

@keyframes shimmer {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

/* Enhanced focus state for accessibility */
.navigationItem:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
  color: var(--color-primary);
  background: rgba(49, 175, 180, 0.1);
  transform: translateY(-1px);
}

/* Enhanced active state with better visual hierarchy */
.navigationItem.active {
  background: rgba(49, 175, 180, 0.25);
  color: var(--color-primary);
  box-shadow: 
    0 2px 12px rgba(49, 175, 180, 0.3),
    0 1px 0 rgba(255, 255, 255, 0.1) inset;
}

.navigationItem.active::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 50%;
  transform: translateX(-50%);
  width: 24px;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    var(--color-primary) 20%, 
    var(--color-primary) 80%, 
    transparent 100%);
  border-radius: 1px;
  box-shadow: 0 0 8px rgba(49, 175, 180, 0.6);
}

/* Sub-navigation items (smaller) */
.navigationItem.subItem {
  font-size: var(--font-size-xs);
  padding: var(--space-xs) var(--space-sm);
  color: rgba(255, 255, 255, 0.7);
  min-height: 28px;
}

.navigationItem.subItem:hover {
  color: rgba(255, 255, 255, 0.9);
  background: rgba(255, 255, 255, 0.1);
}

/* Item text */
.itemText {
  display: block;
}

/* Responsive adjustments */
@media (min-width: 768px) and (max-width: 1023px) {
  .navigationContent {
    padding: var(--space-md) var(--space-xl);
  }
  
  .mainNavigation {
    gap: var(--space-md);
  }
  
  .navigationItem {
    font-size: var(--font-size-xs);
    padding: var(--space-xs) var(--space-sm);
  }
}

@media (min-width: 1024px) {
  .navigationContent {
    padding: var(--space-md) var(--space-2xl);
  }
  
  .mainNavigation {
    gap: var(--space-xl);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .stickyNavigationBar {
    background: rgba(0, 0, 0, 0.95);
    border-bottom-color: var(--color-primary);
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
  }
  
  .navigationItem {
    border: 1px solid transparent;
  }
  
  .navigationItem:hover,
  .navigationItem:focus {
    border-color: var(--color-primary);
    background: var(--color-primary);
    color: var(--color-background-darker);
  }
  
  .navigationItem.active {
    border-color: var(--color-primary);
    background: var(--color-primary);
    color: var(--color-background-darker);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .stickyNavigationBar,
  .navigationItem,
  .logoLink,
  .logo {
    transition: none !important;
    animation: none !important;
  }
  
  .navigationItem:hover {
    transform: none !important;
  }
}

/* Print styles */
@media print {
  .stickyNavigationBar {
    display: none;
  }
}

/* CSS custom property for work section height adjustment */
/* Note: CSS custom properties are handled via CSS-in-JS or global styles */

/* When sticky nav is visible, expose the height for other components */
.stickyNavigationBar {
  --nav-height: 60px;
}

/* Dark theme is the default - styling defined above */

/* Enhanced light theme variant with improved glass morphism */
.stickyNavigationBar.light {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(24px) saturate(180%);
  -webkit-backdrop-filter: blur(24px) saturate(180%);
  border-bottom: 1px solid rgba(49, 175, 180, 0.1);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.08),
    0 1px 0 rgba(255, 255, 255, 0.8) inset,
    0 -1px 0 rgba(0, 0, 0, 0.05) inset;
}

.stickyNavigationBar.light .navigationItem {
  color: rgba(20, 33, 45, 0.9);
}

.stickyNavigationBar.light .navigationItem:hover {
  background: rgba(49, 175, 180, 0.1);
  color: var(--color-primary);
  box-shadow: 
    0 4px 20px rgba(49, 175, 180, 0.15),
    0 1px 0 rgba(255, 255, 255, 0.8) inset;
}

.stickyNavigationBar.light .navigationItem.active {
  background: rgba(49, 175, 180, 0.15);
  color: var(--color-primary);
  box-shadow: 
    0 2px 12px rgba(49, 175, 180, 0.2),
    0 1px 0 rgba(255, 255, 255, 0.8) inset;
}

.stickyNavigationBar.light .navigationItem.subItem {
  color: rgba(20, 33, 45, 0.7);
}

.stickyNavigationBar.light .navigationItem.subItem:hover {
  color: rgba(20, 33, 45, 0.9);
  background: rgba(20, 33, 45, 0.05);
  box-shadow: 0 2px 8px rgba(20, 33, 45, 0.1);
}

.stickyNavigationBar.light .subNavigationDivider {
  background: rgba(20, 33, 45, 0.15);
}

/* Enhanced animation performance optimizations */
.stickyNavigationBar {
  will-change: transform, opacity, backdrop-filter;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  
  /* Smooth backdrop filter transitions */
  transition: backdrop-filter var(--duration-normal) var(--ease-out);
}

/* Enhanced navigation item animations with hardware acceleration */
.navigationItem {
  will-change: transform, background-color, color, box-shadow;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  
  /* Staggered animation support */
  animation-fill-mode: both;
}

/* Staggered animation for navigation items with enhanced timing */
.navigationItem:nth-child(1) { animation-delay: 0.05s; }
.navigationItem:nth-child(2) { animation-delay: 0.1s; }
.navigationItem:nth-child(3) { animation-delay: 0.15s; }
.navigationItem:nth-child(4) { animation-delay: 0.2s; }
.navigationItem:nth-child(5) { animation-delay: 0.25s; }
.navigationItem:nth-child(6) { animation-delay: 0.3s; }

/* Enhanced appearance animation for navigation items */
@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateY(-12px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.stickyNavigationBar.visible .navigationItem {
  animation: slideInFromTop 0.4s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

/* Loading state animations */
@keyframes pulse {
  0%, 100% { opacity: 0.7; }
  50% { opacity: 1; }
}

.stickyNavigationBar.loading .navigationItem {
  animation: pulse 1.5s ease-in-out infinite;
}

/* Context change transition animations */
@keyframes contextFadeIn {
  from {
    opacity: 0;
    transform: translateX(-8px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.navigationItem.contextChange {
  animation: contextFadeIn 0.3s var(--ease-out) forwards;
}

/* Ensure proper stacking context */
.stickyNavigationBar {
  isolation: isolate;
}

/* Loading state (for future enhancement) */
.stickyNavigationBar.loading {
  pointer-events: none;
  opacity: 0.7;
}

.stickyNavigationBar.loading .navigationItem {
  cursor: wait;
}